<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="messageMapper">
	<resultMap type="Message" id="messageMap">
		<id property="messageCode" column="M_CODE" />
		<result property="projectCode" column="P_PROJECT_CODE"/>
		<result property="writerEmail" column="WRITER_EMAIL"/>
		<result property="receiverEmail" column="RECEIVER_EMAIL"/>
		<result property="messageKinds" column="M_KINDS"/>
		<result property="content" column="M_CONTENT"/>
		<result property="sendDate" column="M_SEND_DATE"/>
		<result property="readFlag" column="M_READ_FLAG"/>
		<!-- 화면에 보여질 프로젝트 정보 -->
		<result property="title" column="P_TITLE"/>
		<result property="repImg" column="P_REP_IMG"/>
		<result property="creatorEamil" column="CREATOR_EMAIL"/>
		<result property="writerName" column="WRITER_NAME"/>
		<result property="receiverName" column="RECEIVER_NAME"/>
		<result property="newMessageCount" column="NEW_MESSAGE_COUNT"/>
		<!-- <collection property="replyList" column="REPLY_CODE" ofType="Reply" resultMap="replyMap"/> -->
	</resultMap>
	
	<select id = "selectMessageList" resultMap="messageMap" parameterType="string">
		SELECT P.P_PROJECT_CODE, P_TITLE, P_REP_IMG, M_CODE, M_WRITER, M_RECEIVER, M_CONTENT, TO_CHAR(M_SEND_DATE,'YYYY-MM-DD HH24:MI') AS M_SEND_DATE, 
						-- 로그인 한 유저가 보낸 것이 아닌 새로운 메시지만 카운트
						(SELECT COUNT(*) FROM MESSAGE 
						WHERE M_READ_FLAG = 'F' 
							AND P_PROJECT_CODE = P.P_PROJECT_CODE 
							AND M_WRITER != #{email}) AS NEW_MESSAGE_COUNT,
			      	(SELECT NAME FROM MEMBER WHERE EMAIL = M_WRITER) AS WRITER_NAME--,
			--      (SELECT NAME FROM MEMBER WHERE EMAIL = M_RECEIVER) AS RECEIVER_NAME
		FROM PROJECT P JOIN MESSAGE ON(P.P_PROJECT_CODE = MESSAGE.P_PROJECT_CODE)
		WHERE P.P_PROJECT_CODE IN (SELECT P_PROJECT_CODE 
															FROM MESSAGE 
															WHERE M_WRITER = #{email})
		-- 프로젝트 별 가장 최신 메시지 정보만
		AND M_SEND_DATE IN (SELECT MAX(M.M_SEND_DATE) 
												FROM MESSAGE M 
												WHERE (M.M_WRITER = #{email} OR M.M_RECEIVER = #{email}) 
												AND M.P_PROJECT_CODE = P.P_PROJECT_CODE) 
	</select>

	<!-- <select id="selectMessageList" parameterType="string" resultMap="messageMap">
	    SELECT P_PROJECT_CODE, M_CODE, 
				M_WRITER, (SELECT NAME FROM MEMBER WHERE EMAIL = M_WRITER) AS WRITER_NAME,
				M_RECEIVER, (SELECT NAME FROM MEMBER WHERE EMAIL = M_RECEIVER) AS RECEIVER_NAME,
				M_KINDS, M_CONTENT, M_SEND_DATE, M_READ_FLAG 
		FROM MESSAGE
		WHERE M_WRITER = #{email}
	</select> -->

	<insert id="insertMessage" parameterType="Message">
	    INSERT INTO MESSAGE 
	    VALUES(#{projectCode}, SEQ_MSG.NEXTVAL, #{writerEmail}, #{receiverEmail}, #{messageKinds}, #{content}, SYSDATE, DEFAULT)
	</insert>

	<!-- <select id="selectPostList" parameterType="int" resultMap="postMap">
	    SELECT P.POST_CODE, P_PROJECT_CODE, P.EMAIL, P.CONTENT, P.WRITTEN_DATE, P.DELFLAG, NAME, PROFILE_IMG,
        				(SELECT COUNT(*) FROM REPLY WHERE P.POST_CODE = POST_CODE  AND DELFLAG != 'T') AS REPLY_COUNT
		FROM POST P
		FULL JOIN REPLY R ON(P.POST_CODE = R.POST_CODE)
    	LEFT JOIN MEMBER M ON(P.EMAIL = M.EMAIL)
	    WHERE P_PROJECT_CODE = #{projectCode}
	    AND P.DELFLAG != 'T'
	    ORDER BY P.POST_CODE DESC
	</select>
	<select id="selectPost" parameterType="int" resultMap="postMap">
		SELECT P.POST_CODE, P_PROJECT_CODE, P.EMAIL, P.CONTENT, P.WRITTEN_DATE, P.DELFLAG, NAME, PROFILE_IMG,
        				R.REPLY_CODE, R.EMAIL AS R_EMAIL, R.CONTENT AS R_CONTENT, TO_CHAR(R.WRITTEN_DATE,'YYYY-MM-DD HH24:MI') AS R_WRITTEN_DATE, R.DELFLAG AS R_DELFLAG, 
       					(SELECT NAME FROM MEMBER WHERE MEMBER.EMAIL = R.EMAIL) AS R_NAME,
                		(SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER.EMAIL = R.EMAIL) AS R_PROFILE_IMG,
                 		(SELECT COUNT(*) FROM REPLY WHERE P.POST_CODE = POST_CODE AND DELFLAG != 'T') AS REPLY_COUNT
		FROM POST P
    	LEFT JOIN MEMBER M ON(P.EMAIL = M.EMAIL)
      	LEFT JOIN (SELECT * FROM REPLY WHERE DELFLAG != 'T') R ON(P.POST_CODE = R.POST_CODE)
      	WHERE P.DELFLAG != 'T' 
		AND P.POST_CODE = #{postCode}
	</select>
	<select id="selectPostCount" parameterType="int" resultType="int">
		SELECT COUNT(*) AS COUNT
		FROM POST
		WHERE P_PROJECT_CODE = #{projectCode}	   
		AND DELFLAG != 'T' 
	</select>
	
	<insert id="insertPost" parameterType="Post">
		INSERT INTO POST VALUES(SEQ_POST.NEXTVAL, #{projectCode}, #{email}, #{content}, SYSDATE, DEFAULT)	    
	</insert>

	<update id="updatePost" parameterType="Post">
	    UPDATE POST SET CONTENT = #{content}
	    WHERE POST_CODE = #{postCode}
	</update>
	
	<delete id="deletePost" parameterType="int">
	    DELETE FROM POST
	    WHERE POST_CODE = #{postCode}
	</delete>
	<delete id="deletePost" parameterType="int">
	    UPDATE POST
	    SET DELFLAG = 'T'
	    WHERE POST_CODE = #{postCode}
	</delete>
	
	<insert id="insertReply" parameterType="Reply">
		INSERT INTO REPLY VALUES(SEQ_REPLY.NEXTVAL, #{postCode}, #{content}, #{email}, SYSDATE, DEFAULT)    
	</insert>
	
	<delete id="deleteReply" parameterType="int">
	    UPDATE REPLY
	    SET DELFLAG = 'T'
	    WHERE REPLY_CODE = #{replyCode}
	</delete> -->
</mapper>